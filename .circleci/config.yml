version: 2
references:
  ## Workspaces
  workspace: &workspace
               ~/src

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
    - image: circleci/android:api-27-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  ## Cache
  gradle_key: &gradle_key
                jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  gems_key: &gems_key
              gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
      - ~/.gradle
      - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
      - vendor/bundle

  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  decode_android_key: &decode_android_key
    run:
      name: Decode Android key store
      command: echo $RELEASE_KEY_STORE | base64 -di | tee release.keystore app/release.keystore >/dev/null

  decode_google_services: &decode_google_services
    run:
      name: Decode Google Services
      command: echo $GOOGLE_SERVICES | base64 -di | tee google-services.json app/google-services.json >/dev/null

  auto_download_missing_sdk_packages: &auto_download_missing_sdk_packages
    run:
      name: Auto Download Missing SDK Packages
      command: yes | sdkmanager --licenses && yes | sdkmanager --update

jobs:
  test_unit:
    <<: *android_config
    steps:
    - checkout
    - *auto_download_missing_sdk_packages
    - *restore_gradle_cache
    - *restore_gems_cache
    - *ruby_dependencies
    - *android_dependencies
    - *save_gradle_cache
    - *save_gems_cache
    - *decode_google_services
    - run:
        name: Run unit tests
        command: bundle exec fastlane unit_tests
    - store_artifacts:
        path: app/build/reports/
        destination: /reports/
    - store_test_results:
        path: app/build/test-results/
        destination: /test-results/


  ## Deploy to Crashlytics Beta
  deploy_crashlytics:
    <<: *android_config
    steps:
    - checkout
    - *auto_download_missing_sdk_packages
    - *restore_gradle_cache
    - *restore_gems_cache
    - *ruby_dependencies
    - *android_dependencies
    - *save_gradle_cache
    - *save_gems_cache
    - *decode_android_key
    - *decode_google_services
    - run:
        name: Generate release notes from the last merge commit name
        command: echo $(git log | head -6 | tail -1 | cut -d '/' -f 3 | cut -d '_' -f 1 | tr '-' ' ' | sed 's/.*/\u&/'). > release-notes.txt
    - run:
        name: Deploy to Crashlytics Beta
        command: bundle exec fastlane deploy_to_crashlytics

workflows:
  version: 2
  workflow:
    jobs:
    - test_unit
    - deploy_crashlytics:
        filters:
          branches:
            only:
            - develop
        requires:
        - test_unit